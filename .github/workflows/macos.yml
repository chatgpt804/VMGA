name: MacOS Virtual Machine
on: 
  workflow_dispatch:

defaults:
  run:
    shell: bash

jobs:
  build:
    name: MacOS Build
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2

    - name: Setup MacOS user + VNC + ngrok
      env:
        NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
        MAC_USER_PASSWORD: ${{ secrets.MAC_USER_PASSWORD }}
        VNC_PASSWORD: ${{ secrets.VNC_PASSWORD }}
        MAC_REALNAME: ${{ secrets.MAC_REALNAME }}
      run: |
        # Disable Spotlight
        sudo mdutil -i off -a

        # Create new user
        sudo dscl . -create /Users/thawhakyi
        sudo dscl . -create /Users/thawhakyi UserShell /bin/bash
        sudo dscl . -create /Users/thawhakyi RealName "$MAC_REALNAME"
        sudo dscl . -create /Users/thawhakyi UniqueID 1001
        sudo dscl . -create /Users/thawhakyi PrimaryGroupID 80
        sudo dscl . -create /Users/thawhakyi NFSHomeDirectory /Users/koolisw
        sudo dscl . -passwd /Users/thawhakyi "$MAC_USER_PASSWORD"
        sudo createhomedir -c -u thawhakyi > /dev/null
        sudo dscl . -append /Groups/admin GroupMembership thawhakyi

        # Enable VNC
        sudo /System/Library/CoreServices/RemoteManagement/ARDAgent.app/Contents/Resources/kickstart \
          -configure -allowAccessFor -allUsers -privs -all
        sudo /System/Library/CoreServices/RemoteManagement/ARDAgent.app/Contents/Resources/kickstart \
          -configure -clientopts -setvnclegacy -vnclegacy yes 

        # Set VNC password
        echo "$VNC_PASSWORD" | perl -we 'BEGIN { @k = unpack "C*", pack "H*", "1734516E8BA8C5E2FF1C39567390ADCA"}; $_ = <>; chomp; s/^(.{8}).*/$1/; @p = unpack "C*", $_; foreach (@k) { printf "%02X", $_ ^ (shift @p || 0) }; print "\n"' \
          | sudo tee /Library/Preferences/com.apple.VNCSettings.txt

        # Restart VNC service
        sudo /System/Library/CoreServices/RemoteManagement/ARDAgent.app/Contents/Resources/kickstart -restart -agent -console
        sudo /System/Library/CoreServices/RemoteManagement/ARDAgent.app/Contents/Resources/kickstart -activate

        # Install ngrok (formula, not cask!)
        brew install ngrok

        # Configure ngrok
        ngrok config add-authtoken "$NGROK_AUTH_TOKEN"

        # Start ngrok TCP tunnel for VNC
        nohup ngrok tcp 5900 --log=stdout > ngrok.log &
        sleep 5

    - name: Show ngrok public URL
      run: curl --silent http://127.0.0.1:4040/api/tunnels | jq -r '.tunnels[0].public_url'

    - name: Keep Runner Alive
      uses: mxschmitt/action-tmate@v2
